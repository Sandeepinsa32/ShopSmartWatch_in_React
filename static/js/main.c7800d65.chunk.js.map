{"version":3,"sources":["productcontent.module.css","productpreview.module.css","header.module.css","App.module.css","header.js","productpreview.js","productcontent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","className","classes","header","mainHeader","Topbar","src","logo","alt","logo_text","type","loginBtn","Productpreview","ImageSection","MainProductImage","FeaturesItem","time","now","Date","hours","getHours","ampm","minutes","getMinutes","time_str","join","setTimeout","FeaturesItem2","heart","buybtn2","Productcontent","contentSection","headerText","ContentText","Text","c","productImg","SelectedProductImg","btn","timebtn","heartbtn","App","AppHeader","mainDiv","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c7800d65.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentSection\":\"productcontent_contentSection__3FxLf\",\"headerText\":\"productcontent_headerText__2S2yA\",\"ContentText\":\"productcontent_ContentText__uwnnf\",\"Text\":\"productcontent_Text__2qlro\",\"color\":\"productcontent_color__2Wfnx\",\"pink\":\"productcontent_pink__2Pmdi\",\"brown\":\"productcontent_brown__1SSB2\",\"black\":\"productcontent_black__YSA8J\",\"orange\":\"productcontent_orange__15VeS\",\"btn\":\"productcontent_btn__3JPvW\",\"buybtn2\":\"productcontent_buybtn2__3TMg_\",\"productImg\":\"productcontent_productImg__1_l2Q\",\"SelectedProductImg\":\"productcontent_SelectedProductImg__3rFsn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageSection\":\"productpreview_ImageSection__emIcw\",\"FeaturesItem\":\"productpreview_FeaturesItem__Lk5Z_\",\"FeaturesItem2\":\"productpreview_FeaturesItem2__26bUI\",\"heart\":\"productpreview_heart__2mHuk\",\"MainProductImage\":\"productpreview_MainProductImage__3INB3\",\"buybtn2\":\"productpreview_buybtn2__ZMr_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainHeader\":\"header_mainHeader__dy2qt\",\"logo\":\"header_logo__2hp_J\",\"logo_text\":\"header_logo_text__1W5SG\",\"loginBtn\":\"header_loginBtn__3eoAL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainDiv\":\"App_mainDiv__1VZfZ\",\"mainHeader\":\"App_mainHeader__1wbgS\"};","import React from 'react';\r\nimport classes from'./header.module.css';\r\n\r\nconst Header = (props) => {\r\n    const  logoPink_src=\"png/fit_band_pink.png\";\r\n    return(\r\n        <div className={classes.header}>\r\n\r\n        <header className={classes.mainHeader}>\r\n          <nav className={classes.Topbar}>\r\n\r\n                <img src={logoPink_src}  className={classes.logo } alt='logoImage' />\r\n                <span className={classes.logo_text}>GearOS</span>\r\n                <button type=\"button\" className={classes.loginBtn}>Login</button>\r\n                \r\n          </nav>\r\n      </header>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n        export default Header;","import React from 'react';\r\nimport classes from'./productpreview.module.css';\r\n\r\nconst Productpreview = (props) => {\r\n            \r\n             const  logoPink_src=\"png/fit_band_pink.png\";\r\n            const  Heart_src    =  \"png/heart.svg\";  \r\n\r\n\r\n             function time(){\r\n          const  now      = new Date,\r\n            hours   = now.getHours(),\r\n            ampm    = hours<12 ? ' AM' : ' PM',\r\n            minutes = now.getMinutes(),\r\n            //seconds = now.getSeconds(),\r\n            time_str   = (hours>12) ? [ (hours-12), //otherwise: what's the use of AM/PM?\r\n                  (minutes < 10 ? \"0\" + minutes : minutes),\r\n                  // (seconds < 10 ? \"0\" + seconds : seconds) \r\n                  ]\r\n                   .join(\":\") + ampm\r\n          //else part of if condition;\r\n          : [(hours),\t\t\t\t\t\t\t\t\t\t //otherwise: what's the use of AM/PM?\r\n          (minutes < 10 ? \"0\" + minutes : minutes),\r\n          //(seconds < 10 ? \"0\" + seconds : seconds)\r\n          ]\r\n          .join(\":\") + ampm ;\r\n\r\n          setTimeout(time,1000);\r\n          return time_str;\r\n          }\r\n\r\n\r\n\r\n\r\n   \r\n    return(\r\n        <div className={classes.Productpreview}>\r\n        <section className={classes.ImageSection}>\r\n          <img src={logoPink_src}  className={classes.MainProductImage} alt='logoImage' />\r\n            \r\n            <div className={classes.FeaturesItem} > \r\n            \r\n            <p> {` ${time()}`}</p>\r\n            </div>\r\n\r\n             <div className={classes.FeaturesItem2} > \r\n             <img src={Heart_src}  className={[classes.logo,classes.heart].join('') } alt='logoImage' />\r\n            <p> 50</p>\r\n            </div>\r\n            \r\n          <button  className={classes.buybtn2} > Buy Now        </button> \r\n          </section>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Productpreview;","import React from 'react';\r\nimport classes from'./productcontent.module.css';\r\n\r\nconst Productcontent = (props) => {\r\n    const  logoPink_src=\"png/fit_band_pink.png\";\r\n    const  logoBlack_src=\"png/fit_band_black.png\";\r\n    const  logoBrown_src=\"png/fit_band_brown.png\";\r\n    const  logoOrange_src=\"png/fit_band_orange.png\";\r\n    const  Heart_src    =  \"png/heart.svg\"; \r\n\r\n\r\nreturn(\r\n        <div className={classes.Productcontent}>\r\n\r\n     <section className={classes.contentSection}>\r\n          <h3 className={classes.headerText} >Gear OS 2-Works on Android and iPhone</h3>\r\n          <p className={classes.ContentText} >Wear OS by Gogle works with phones running Android 6.0+ (excluding Go edition) or iOS 10.0+</p>\r\n           <p className={classes.Text} >Select color</p>\r\n       \r\n       \r\n       \r\n       \r\n          <div className={classes.c}>\r\n        \t \r\n                <img src={logoPink_src}  className={[classes.productImg,classes.SelectedProductImg].join(' ')} alt='logoImage' />\r\n                <img src={logoBlack_src}  className={classes.productImg} alt='logoImage' />\r\n                <img src={logoBrown_src}  className={classes.productImg} alt='logoImage' />\r\n                <img src={logoOrange_src}  className={classes.productImg} alt='logoImage' />\r\n           \r\n     \r\n              </div>\r\n               <div>\r\n          <p className={classes.Text} >Features</p>\r\n\r\n          <button className={[classes.btn,classes.timebtn].join('')}  > Time          </button>\r\n          <button className={[classes.btn,classes.heartbtn].join('')}  > Heart rate    </button>\r\n          {/* <button className={classes.btn}  > Android       </button>\r\n\t\t\t\t\t<button className={classes.btn}  > Geolaction    </button> */}\r\n         \r\n\t\t\t\t\t\r\n\t\t\t\t            \t\r\n\t\t\t\t\t\r\n          </div>\r\n          {/* <button  className={classes.buybtn} > Buy Now        </button> */}\r\n          </section>\r\n    \r\n        </div>\r\n    );\r\n}\r\nexport default Productcontent;","import React from 'react';\nimport Header from './header';\nimport Productpreview from './productpreview';\nimport Productcontent from './productcontent';\nimport classes from'./App.module.css';\n\nfunction App() {\n\n  // const  logoPink_src=\"png/fit_band_pink.png\";\n  // const  logoBlack_src=\"png/fit_band_black.png\";\n  // const  logoBrown_src=\"png/fit_band_brown.png\";\n  // const  logoOrange_src=\"png/fit_band_orange.png\";\n  // const  Heart_src    =  \"png/heart.svg\";  \n\n       \n  return (  \n     \n    <div className={classes.AppHeader} >\n      <Header/>\n      <div className={classes.mainDiv}>\n          <Productpreview/>\n          <Productcontent/>\n      </div>\n    </div> \n\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n   \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}